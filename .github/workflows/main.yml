name: GitOps Pipeline

on:
  push:
    branches:
      - main
env:
  RUN_NUMBER: ${{ github.run_number }}
  AUTH_GITHUB_USERNAME: ${{ secrets.AUTH_GITHUB_USERNAME }}
  AUTH_GITHUB_TOKEN: ${{ secrets.AUTH_GITHUB_TOKEN }}
  GIT_EMAIL: "guzelkhuz@gmail.com"
  GIT_NAME: "guzel.khuziakhmetova"
  ENVIRONMENT: ${{ vars.ENVIRONMENT }}

jobs:
  build_and_push_image:
    name: Build and push image
    runs-on: ubuntu-latest
    steps:
      -   name: Checkout Code from repository
          uses: actions/checkout@v2
      -   name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

      -   name: Build and push Docker image
          uses: docker/build-push-action@v2
          with:
            context: ./app/
            push: true
            tags: guzelkhuziakhmetova/go-api-task:${{ env.RUN_NUMBER }}

  modify_image_tag:
    name: Modify image tag
    needs: build_and_push_image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Changing the deployment of git repo
        with:
          repository: GuzelSwon/go-api-task2-k8s-deployment
          token: $AUTH_GITHUB_TOKEN
          ref: main
      - name: modify the image
        run: |
          echo $ENVIRONMENT
          git config user.email $GIT_EMAIL
          git config user.name $GIT_NAME
          echo "Working Directory: $(pwd)"
  
          # Navigate to the specific Helm chart directory
          cd helm-chart
  
          # Print values.yaml for debugging before changes
          echo "Before modification:"
          cat values.yaml
  
          sed -i '/^image:/,/^  tag:/{s/^  tag: .*/  tag: "'$RUN_NUMBER'"/}' values.yaml
  
          # Print values.yaml for debugging after changes
          echo "After modification:"
          cat values.yaml
  
          git add values.yaml
          git commit -m "Update image tag by Github Actions Job change manifest: '$RUN_NUMBER'"
          git push origin main

  test_application:
    name: Run tests
    runs-on: ubuntu-latest
    needs: modify_image_tag
    steps:
      - uses: actions/setup-go@v5
        name: Setup Go
        with:
          go-version: '1.22.2'
      - name: Install dependencies
        uses: actions/checkout@v3
      - run: | 
          cd app/
          go mod download
      - name: Test with Go
        uses: actions/checkout@v3
      - run: |
          cd app/tests
          go test -json > TestResults-$RUN_NUMBER.json
      - name: Upload Go test results
        uses: actions/upload-artifact@v4
        with:
          name: Go-results-$RUN_NUMBER
          path: TestResults-$RUN_NUMBER.json
      - name: Verify tests
        run: | 
          if grep FAIL TestResults-$RUN_NUMBER.json; then exit 1
          fi

  perform_rollback:
    name: Perform rollback
    runs-on: ubuntu-latest
    needs: test_application
    if: failure()
    steps:
      - uses: actions/checkout@v3
        name: Changing the deployment of git repo
        with:
          repository: repo-link
          token: $AUTH_GITHUB_TOKEN
          ref: branch-to-pull
      - run: |
          echo "Perform Rollback because Tests Failed"
          git config user.email $GIT_EMAIL
          git config user.name $GIT_NAME
          echo "Working Directory: $(pwd)"
          
          # Navigate to the specific Helm chart directory
          cd helm-chart
          
          # Print values.yaml for debugging before changes
          echo "Before modification:"
          cat values.yaml
          
          sed -i '/^image:/,/^  tag:/{s/^  tag: .*/  tag: "$PREVIOUS_RUN_NUMBER"/}' values.yaml
          
          # Print values.yaml for debugging after changes
          echo "After modification:"
          cat values.yaml
          
          git add values.yaml
          git commit -m "Rolled back image tag by Github Actions Job change manifest: $PREVIOUS_RUN_NUMBER"
          git push origin main

        env:
          PREVIOUS_RUN_NUMBER: ${{ vars.PREVIOUS_RUN_NUMBER }}

  deploy:
    name: Deploy app
    needs: test_application
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v3
        name: Deploy main branch
        with:
          repository: GuzelSwon/go-api-task2-k8s-deployment
          token: $AUTH_GITHUB_TOKEN
          ref: main
      - run: |
          terraform init -backend-config "secret_key='$RUN_NUMBER'" -backend-config "access_key=$(object_storage_access_key)"
          terraform apply -var "service_account_token=$(service_account_token)" -var "auth_github_username=$(auth_github_username)" -var "auth_github_token=$(auth_github_token)" -var "object_storage_secret_key=$(object_storage_secret_key)" -var "object_storage_access_key=$(object_storage_access_key)"
        env:
          OBJECT_STORAGE_SECRET_KEY: ${{ secrets.OBJECT_STORAGE_SECRET_KEY }}
          OBJECT_STORAGE_ACCESS_KEY: ${{ secrets.OBJECT_STORAGE_ACCESS_KEY }}
          SERVICE_ACCOUNT_TOKEN: ${{ secrets.SERVICE_ACCOUNT_TOKEN }}